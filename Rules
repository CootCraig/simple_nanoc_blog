#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.
require 'set'

preprocess do
  items << Nanoc::Item.new(
    "",
    {},
    "/post_index/"
  )
  tag_list = Set.new
  items.each do |item|
    item[:tags].each do |tag|
      if tag.length > 0
        tag_list.add(tag.downcase)
      end
    end if item[:tags]
  end
  items << Nanoc::Item.new(
    "",
    { :tag_list => tag_list },
    "/tag_index/"
  )
  tag_list.each do |tag|
    items << Nanoc::Item.new(
      "",
      { :tag => tag },
      "/tags/#{tag}/"
    )
  end
end

compile '/post_index/*' do
  layout 'post_index'
end

compile '/tag_index/*' do
  layout 'tag_index'
end

compile '/tags/*' do
  layout 'tag_page'
end

compile '/posts/*' do
  filter :kramdown
  layout 'default'
end

compile '*' do
  if item[:extension] == 'haml'
    filter :haml, :format => :html5
    layout 'default'
  elsif item[:extension] == 'md'
    filter :kramdown
    layout 'default'
  elsif item[:extension] == 'css'
    # don’t filter stylesheets
  elsif item.binary?
    # don’t filter binary items
  else
    filter :erb
    layout 'default'
  end
end

route '/posts/*' do
  y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier).captures

  "/posts/#{y}/#{m}/#{slug}/index.html"
end

route '*' do
  if item[:extension] == 'css'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.css'
  elsif item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml, :format => :html5

